:root {
  --background-color: rgb(155,200, 209);
  --primary-color: #0004f7;
  --secondary-color: #8745ce;
  --dark-grey: #2b2b2b;
  --grid-Items:#82a7c2;
  --font-weight: 400;
  --font-size: 22px;
  --line-height: 1.6;
  --b1-background-color: #357b70;
  --b2-background-color: #e0b354;
}


a {
  color: var(--primary-color);
}

body {
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: var(--font-weight);
  font-size: var(--font-size);
  /* Sets the font size to 16px */
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
  background-color: var(--background-color);
}
header {
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: var(--font-weight);
  font-size: var(--font-size);
  /* Sets the font size to 16px */
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
}
footer {
  font-family: 'Roboto Condensed', sans-serif;
  font-weight: var(--font-weight);
  font-size: var(--font-size);
  /* Sets the font size to 16px */
  line-height: var(--line-height);
  /* Sets the line-height to 1.6 */
}

h1{
   font-size: 35px;
   font-weight: var(--font-weight);
}

h2 {
    font-size: 26px;
    font-weight: var(--font-weight);
}

h3 {
    font-size: 18px;
    font-weight: var(--font-weight);
}

a {
    color: var(--primary-color);
}


a:visited { /*visited link */
    color: var(--secondary-color);
}

a:hover, a:focus { /* No underlining when hovering over a link */
    text-decoration: none;
  }

button {
    /* overwrites browser defaults and resets the border */
    border: none;
    /* takes the font from the outer container */
    font-family: inherit;
    /* styles the background color, font color, and text decoration (under0, etc.) of the button */
    background-color: var(--b1-background-color);
    color: white;
    text-decoration: none;
    /*adds spacing to the button (this will be discussed more in-depth later) */
    padding: 10px;
    border-radius: 3px;
    /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
    border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  }
  button:hover, button:focus {
    /* lets the mouse appear as a hand when hovering over the button */
    cursor: pointer;
    /* reduces the opacity of the button to 80% */
    opacity: 0.8;
  }

.button_secondary {
  background-color: var(--b2-background-color);
  color: var(--dark-grey);
}

.navigation-list__item--active {
    text-decoration: none;
}

.profile_portrait {
    float:left;
    width: 250px;
    margin-right: 40px;
    border-radius: 50%;
}

.page-footer {
    clear: both;
}

.profile {
    max-width: 700px;
    margin: 0 auto;
}

.profile_text {
    flex: 1 1 100px;
}

* {
    box-sizing: border-box;
}

.page-footer {
    clear: both;
    display: flex;
    flex-direction: column;
    text-align: center;
}

.logo {
    width: 200px;
    height: 100px;
}

.page-header {
    display: flex;
    width: 100%;
    padding: 20px;
}

.page-header_item {
    flex: 0 1 200px;
}

.page-header_item:last-child {
    flex-grow: 1;
    text-align: right;
}

.navigation-list {
    list-style-type: none;
}

.navigation-list li {
    display: inline-block;
    margin-left: 15px;
}

/* start grid fallback */
.grid__item {
    display: inline-block;
    width: 33%;
   }
   /* end grid fallback */
   
   @supports (display: grid) {
    .grid {
      display: grid;
      /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
      grid-template-columns: 1fr 1fr 1fr;
      grid-gap: 20px;
      margin: 0;
   
    }
    .grid__item {
      background-color:var(--grid-Items);
      width: auto;
      min-height: auto;
      margin: 0;
    }
    .grid__item:last-child {
      grid-column: 3 / 3;
      grid-row: 1 / 3;
    }
  }

  @media all and (max-width: 750px){
    /* shared code */
  }

  @media all and (max-width: 500px) {
    .grid {
      grid-template-columns: 1fr;
    }
  }
  @media all and (min-width: 500px) and (max-width: 750px){
    .grid {
      grid-template-columns: 1fr 1fr;
    }
  }
  @media all and (max-width: 750px) {
    .grid {
      grid-gap: 10px;
    }
    .grid__item:last-child {
      grid-column: auto / auto;
      grid-row: auto / auto;
    }
    h1 {
      font-size: 22px;
    }
  }

.button, button {
  /* overwrites browser defaults */
  /* resets the border */
  border: none;
  display: inline-block;
  /* takes the font from the outer container */
  font-family: inherit;
  /* style button */
  background-color: var(--b1-background-color);
  color: white;
  text-decoration: none;
  padding: 10px;
  border-radius: 3px;
  /* width of the border, type, color */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: 0.2s opacity;
}

button:hover, button:focus, .button:hover, .button:focus {
  /*lets the mouse appear as a hand when hovering over the button */
  cursor: pointer;
  /*reduces the opacity of the button to 80% */
  opacity: 0.8;
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }
  50% {
    fill: #fcffad;
  }
  100% {
    fill: #f76414;
  }
}

.sun {
  animation-duration: 4s;
  animation-name: color-change;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}
.sun {
  animation: 4s color-change infinite alternate linear;
}
@keyframes cloud-move {
  from {
    transform: translate(0, 50px);
  }
  to {
    transform: translate(200px, 50px);
  }
}
.cloud-front {
  animation: 30s cloud-move infinite alternate linear;
}
@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }
  to {
    transform: translate(100px, 48px);
  }
}
.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}

